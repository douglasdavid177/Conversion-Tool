.container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  position: fixed;
  left: 0;
  right: 0;
  height: 100%;
  /* Main container is entire viewport, 
  with content as scroll container inside it with heavy padding */
}
.hamburgerHolder {
  position: fixed;
  top: 1.5rem;
  right: 1.5rem;
  width: 2rem;
}
button.hamburger {
  width: 2rem;
  aspect-ratio: 1;
  background: none;
  border: none;
  outline: none;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}
button.hamburger img {
  height: 100%;
  width: 100%;
  backdrop-filter: blur(0.1rem);
  border-radius: 0.2rem;
}

.content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  text-align: left;
  height: 100%;
  width: 100%;
  position: fixed;
  inset: 0;
  overflow-y: auto;
  overflow-x: hidden;
  scrollbar-gutter: stable;

  /*Main content container has heavy padding added to it in media queries*/
  /*Scrolls, with scrollbar not affecting layout*/
}

.content > * {
  width: 100%;
  /*All elements within content are rows that fill the full width by default*/
}

.content .header {
  display: flex;
  flex-direction: column;
  align-items: var(--flexchildren-alignment);
  justify-content: center;
  margin-bottom: 0.5rem;
}

.content h3 {
  color: hsl(0, 0%, 50%);
  margin-bottom: 0;
  font-size: 1.125rem;
  transition: ease-in-out, color 0.25s;
}
.content h2 {
  color: hsl(0, 0%, 75%);
}
.header h5 {
  text-align: var(--text-alignment);
  margin-bottom: -0.75rem;
}
.header h4 {
  text-align: var(--text-alignment);
}
.header h3 {
  text-align: center;
}
.header h2 {
  text-align: var(--text-alignment);
}
.header h1 {
  /*This for underline styling, not currently in use*/
  text-decoration-style: solid;
  text-decoration-color: var(--turquoise);
  text-decoration-thickness: 5px;
  text-align: var(--text-alignment);
  position: relative;
  font-size: 1.75rem;
}
.header h1::after {
  content: "App built by David Douglas";
  position: absolute;
  /* bottom: 0; */
  top: 100%;
  left: 0;
  transform: translateY(0.5rem);
  font-size: 0.83rem;
  color: hsl(0, 0%, 50%);
}

.heroimg {
  width: auto;
  max-width: 95%;
  max-height: 22.5vh;
  aspect-ratio: 1/1;
  align-self: center;
  margin-top: 2rem;
}

.content .buttonHolder {
  justify-self: flex-end;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.content button {
  width: 100%;
  height: 3rem;
  font: inherit;
  cursor: pointer;
  outline: none;
  background: none;
  color: white;
  border: 3.5px solid white;
  margin-bottom: 2.5rem;
  margin-top: 1rem;
  border-radius: var(--button-border-radius);
  padding: 0.5rem;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  transition: all 0.35s ease;
  border: none;
}
button.primary {
  background-color: var(--turquoise);
  color: black;
  font-weight: bold;
}
button.primary::after {
  content: "";
  position: absolute;
  inset: 0;
  background-color: rgb(0 0 0 / 0.1);
  /*Makes background of button slightly darker for less eye strain*/
}
button.secondary {
  background: transparent;
  border: none;
  color: white;
  justify-content: flex-start;
  width: 11rem;
}

button.secondary::before {
  /*Left arrow before word with this class*/
  color: white;
  content: "\2190  ";
  font-size: 2rem;
  margin-top: -0.125rem;
  margin-right: 1rem;
}

.content button:active {
  font-weight: 800;
}
button.secondary:active::before {
  font-weight: 900;
  color: var(--turquoise);
}
.mainSection {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  padding-bottom: 1rem;
  margin-top: 0.75rem;
}
.fixedLayout {
  min-height: 0rem;
}
.fixedButton {
  position: fixed;
  bottom: 0;
  width: 85%;
}
/* Media queries adjust the amount of padding on the sides of the application 
based on the width of the screen, to better accommodate smaller devices 
as well as larger ones.   The application uses a mobile first design. */
@media only screen and (min-width: 678px) {
  .content {
    padding-left: 20%;
    padding-right: 20%;
  }
}
@media only screen and (min-width: 1200px) {
  .content {
    /* max-width: 40%; */
    padding-left: 30%;
    padding-right: 30%;
  }
}

@media only screen and (max-width: 678px) {
  .content {
    /* width: 85%; */
    padding-left: 7.5%;
    padding-right: 7.5%;
  }
}
