.container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  align-items: stretch;
  /* min-height: 80vh; */
  position: relative;
  /* This is to make layout changes work smootly for some reason */
  position: fixed;
  height: 100%;
  align-items: flex-start;
  overflow-y: auto;
  overflow: overlay;
  left: 0;
  right: 0;
  /* with bottom margin on button, this is not needed as total height is already more than 90vh on most normal deveices */
}
.hamburgerHolder {
  position: fixed;
  top: 1.5rem;
  right: 1.5rem;
  width: 2rem;
  /* bottom: 0; */
}
button.hamburger {
  /* position: sticky;
  top: 1rem; */

  width: 2rem;
  aspect-ratio: 1;
  background: none;
  border: none;
  outline: none;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  /* z-index: 1; */
}
button.hamburger img {
  height: 100%;
  width: 100%;
  backdrop-filter: blur(0.1rem);
  border-radius: 0.2rem;
}

.content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: left;

  /* width: 50%; */
  /* min-height: 100%; */
  /* This is unnecessary because the parent stretches it anyway */
}

.content > * {
  width: 100%;
}

.content .header {
  display: flex;
  flex-direction: column;
  align-items: var(--flexchildren-alignment);
  justify-content: center;
  margin-bottom: 0.5rem;
  /* margin-bottom: 2rem; */
}

.content h5 {
  color: hsl(0, 0%, 50%);
}
.content h4 {
  color: hsl(0, 0%, 50%);
}

.content h3 {
  color: hsl(0, 0%, 50%);

  margin-bottom: 0;
  transition: ease-in-out, color 0.25s;
}
.content h2 {
  color: hsl(0, 0%, 75%);
}
.header h5 {
  text-align: center;
  text-align: var(--text-alignment);
  margin-bottom: -1.25rem;
}
.header h4 {
  text-align: center;

  text-align: var(--text-alignment);
}
.header h3 {
  text-align: center;
}
.header h2 {
  text-align: center;
  text-align: var(--text-alignment);
}
.header h1 {
  /* text-decoration-line: underline; */
  text-decoration-style: solid;
  text-decoration-color: var(--turquoise);
  text-decoration-thickness: 5px;
  text-align: var(--text-alignment);
  position: relative;
}
.header h1::after {
  content: "App built by David Douglas";
  position: absolute;
  bottom: 0;
  left: 0;
  transform: translateY(1.75rem);
  font-size: 0.875rem;
  font-size: 0.83rem;
  color: hsl(0, 0%, 50%);
}

.warning {
  animation: warningAnim 2.5s;
}
@keyframes warningAnim {
  0% {
    color: var(--grapefruit);
  }
  50% {
    color: var(--grapefruit);
  }
  100% {
    color: hsl(0, 0%, 50%);
  }
}
.heroimg {
  /* width: 45%; */
  width: auto;
  max-width: 95%;
  max-height: 22.5vh;
  aspect-ratio: 1/1;
  align-self: center;
  /* border: 3px solid white; */
  /* border-radius: 50% 50%; */
  /* margin-top: 4rem; */
  /* margin-bottom: 2rem; */
  margin-top: 2rem;
}

.content .buttonHolder {
  justify-self: flex-end;
  /* flex-grow: 1; */
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  justify-content: center;
}

.content button {
  width: 100%;
  height: 3rem;
  font: inherit;
  cursor: pointer;
  outline: none;
  background: none;
  color: white;
  border: 3.5px solid white;
  margin-bottom: 2.5rem;
  margin-top: 1rem;
  border-radius: var(--button-border-radius);
  padding: 0.5rem;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  transition: all 0.35s ease;
  border: none;
}
button.primary {
  background-color: var(--turquoise);
  color: black;
  font-weight: bold;
}
button.primary::after {
  content: "";
  position: absolute;
  inset: 0;
  /* z-index: -1; */

  background-color: rgb(0 0 0 / 0.1);
  /* transform: scale(1.5); */
}
button.secondary {
  background: transparent;
  border: none;
  color: white;
  justify-content: flex-start;
  width: 11rem;
  /* transition: color 0.5s ease; */
}

button.secondary::before {
  color: white;
  content: "\2190  ";
  font-size: 2rem;
  margin-top: -0.125rem;
  margin-right: 1rem;
}

.content button:active {
  font-weight: 800;
}
button.secondary:active::before {
  font-weight: 900;
  color: var(--turquoise);
}

.mainSectionHolder {
  /* flex-grow: 1; */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 1.5rem;
}

.mainSection {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  padding-bottom: 1rem;
  margin-top: 0.75rem;
}

.inputSection {
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
}

.inputSection h5 {
  align-self: var(--flexchildren-alignment);
}

.inputFields {
  display: flex;
  justify-content: space-evenly;
  text-align: center;
  align-items: center;
  flex-shrink: 2;
}
.inputFields label {
  display: flex;
  flex-direction: column;
  max-width: 6rem;
  align-items: center;
}
.inputFields input {
  margin-top: 0.5rem;
  background: none;
  outline: none;
  border: none;
  border-radius: 0%;
  border-bottom: 4px solid white;
  color: white;
  text-align: center;
  width: 3rem;
  font-size: 1.2rem;
  transition: ease-in-out, width 0.25s;
}

.inputFields input:focus {
  border-bottom: 6px solid white;
  width: 5rem;
  font-weight: bold;
}
.inputFields label:focus-within h3 {
  font-weight: bold;
  color: white;
}
.resultsSection {
  margin-bottom: 0rem;
}

.resultsSection h3 {
  text-align: center;
  margin-bottom: 0rem;
}
.resultsSection .description {
  text-align: left;
}
.resultsSection h2 {
  text-align: center;
}
.resultsSection h1 {
  text-align: center;
  margin-top: 0.5rem;
  margin-bottom: -0.5rem;
}

.higher {
  color: cyan;
  color: var(--aqua);
}
.lower {
  color: yellow;
  color: var(--yellow);
}
.correct {
  color: var(--turquoise);
}
.higherBig {
  color: cyan;
  color: var(--aqua);
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-color: var(--aqua);
  text-decoration-thickness: 5px;
}
.lowerBig {
  color: yellow;
  color: var(--yellow);
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-color: var(--yellow);
  text-decoration-thickness: 5px;
}
.correctBig {
  color: var(--turquoise);
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-color: var(--turquoise);
  text-decoration-thickness: 5px;
}

.fixedLayout {
  /* top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  position: fixed; */
  min-height: 0rem;
}
.fixedButton {
  position: fixed;
  bottom: 0;
  width: 85%;
}

.overflowsho {
  overflow-y: visible;
}

/* Media queries adjust the amount of columns based on the width of the screen, to better accommodate smaller devices  */
@media only screen and (min-width: 678px) {
  .content {
    max-width: 60%;
  }
  .fixedButton {
    width: 60%;
  }
}
@media only screen and (min-width: 1200px) {
  .content {
    max-width: 40%;
  }
  .fixedButton {
    width: 40%;
  }
}

@media only screen and (max-width: 678px) {
  .content {
    width: 85%;
  }
  .fixedButton {
    width: 85%;
  }
}

@media only screen and (max-width: 488px) {
  .content {
    /* width: 90%; */
  }
  .heroimg {
    /* width: 70%; */
  }
}
